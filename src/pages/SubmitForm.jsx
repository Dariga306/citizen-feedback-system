import React, { useState, useEffect } from "react";

export default function SubmitForm() {
  const [form, setForm] = useState({
    name: "", region: "", category: "", subcategory: "",
    service: "", customService: "", contact: "", message: "", attachment: null,
  });

  const [errors, setErrors] = useState({});
  const [success, setSuccess] = useState(false);
  const maxMessageLength = 500;

  const categories = {
    "–ü–æ—Ä—Ç–∞–ª eGov": ["–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏", "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"],
    "–≠–¶–ü / –¶–û–ù": ["–û—à–∏–±–∫–∞ –≠–¶–ü", "–ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–ª—é—á–æ–º", "–í—ã–¥–∞—á–∞ –≠–¶–ü"],
    "–ü–ª–∞—Ç–µ–∂–∏ / Kaspi": ["–ù–∞–ª–æ–≥–∏", "–ì–æ—Å–ø–æ—à–ª–∏–Ω–∞", "–ü–ª–∞—Ç—ë–∂ –Ω–µ –ø—Ä–æ—à—ë–ª"],
    "–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è": ["eGov Mobile", "Kaspi", "eLicense"],
    "–ì–æ—Å—É—Å–ª—É–≥–∏": ["–ü—Ä–æ–ø–∏—Å–∫–∞", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ò–ü", "–°–æ—Ü–ø–æ–¥–¥–µ—Ä–∂–∫–∞"],
    "–î—Ä—É–≥–æ–µ": ["–î—Ä—É–≥–æ–µ"]
  };

  const regions = [
    "–ê–±–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ñ–∞–º–±—ã–ª—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ñ–µ—Ç—ã—Å—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–£–ª—ã—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–ê—Å—Ç–∞–Ω–∞", "–ê–ª–º–∞—Ç—ã", "–®—ã–º–∫–µ–Ω—Ç"
  ].sort((a, b) => a.localeCompare(b, "ru"));

  const getServiceOptions = (category) => {
    const map = {
      "–ü–æ—Ä—Ç–∞–ª eGov": ["eGov.kz", "Digital Agent", "NAO eOtinish"],
      "–≠–¶–ü / –¶–û–ù": ["pki.gov.kz", "–¶–û–ù", "EGov Mobile"],
      "–ü–ª–∞—Ç–µ–∂–∏ / Kaspi": ["Kaspi.kz", "eGov Payment", "Kassa24"],
      "–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è": ["Kaspi App", "EGov Mobile", "eLicense Mobile"],
      "–ì–æ—Å—É—Å–ª—É–≥–∏": ["eGov.kz", "eLicense.kz", "ENPF", "Qamqor.gov.kz"]
    };
    return map[category] || [];
  };

  useEffect(() => {
    if (form.subcategory && form.category && getServiceOptions(form.category).length > 0) {
      const service = getServiceOptions(form.category)[0];
      setForm((prev) => ({ ...prev, service }));
    }
  }, [form.subcategory, form.category]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm((prev) => ({
      ...prev,
      [name]: value,
      ...(name === "category" ? { subcategory: "", service: "", customService: "" } : {})
    }));
    setErrors((prev) => ({ ...prev, [name]: "" }));
    setSuccess(false);
  };

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    if (!file) return;
    const reader = new FileReader();
    reader.onloadend = () => {
      setForm((prev) => ({ ...prev, attachment: reader.result }));
    };
    reader.readAsDataURL(file);
  };

  const validate = () => {
    const newErrors = {};
    if (!form.name.trim()) newErrors.name = "–£–∫–∞–∂–∏—Ç–µ –∏–º—è";
    if (!form.region) newErrors.region = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω";
    if (!form.category) newErrors.category = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é";
    if (form.category !== "–î—Ä—É–≥–æ–µ" && !form.subcategory) newErrors.subcategory = "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É";
    const service = form.service === "other" ? form.customService.trim() : form.service;
    if (!service) newErrors.service = "–£–∫–∞–∂–∏—Ç–µ —Å–µ—Ä–≤–∏—Å";
    if (!form.message.trim()) newErrors.message = "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ";
    if (form.message.length > maxMessageLength) newErrors.message = `–ú–∞–∫—Å–∏–º—É–º ${maxMessageLength} —Å–∏–º–≤–æ–ª–æ–≤`;
    if (form.contact && !/^\+7\d{10}$/.test(form.contact)) newErrors.contact = "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX";
    return newErrors;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const validationErrors = validate();
    if (Object.keys(validationErrors).length > 0) {
      setErrors(validationErrors);
      return;
    }

    const aiRes = await fetch("http://localhost:4000/api/analyze", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ text: form.message }),
    });
    const aiResult = await aiRes.json();

    const finalService = form.service === "other"
      ? form.customService?.trim() || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
      : form.service;

    const newEntry = {
      ...form,
      service: finalService,
      aiResult,
      status: "–ù–æ–≤–æ–µ",
      executor: "",
    };

    try {
      const res = await fetch("http://localhost:4000/api/requests", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(newEntry),
      });

      if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏");

      setSuccess(true);
      setForm({
        name: "", region: "", category: "", subcategory: "",
        service: "", customService: "", contact: "", message: "", attachment: null,
      });
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ü—Ä–æ–≤–µ—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É.");
    }
  };

  return (
    <div className="max-w-xl mx-auto mt-10 p-6 bg-white dark:bg-gray-900 rounded shadow text-gray-900 dark:text-gray-100 transition-all">
      <h2 className="text-2xl font-bold text-center mb-4">üì¨ –û–±—Ä–∞—â–µ–Ω–∏–µ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞</h2>
      {success && (
        <div className="bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 p-2 rounded mb-4 text-sm">
          –û–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!
        </div>
      )}

      <form onSubmit={handleSubmit} className="space-y-4" noValidate>
        <input name="name" value={form.name} onChange={handleChange}
          placeholder="–í–∞—à–µ –∏–º—è *"
          className="w-full p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-white" />
        {errors.name && <p className="text-red-500 text-sm">{errors.name}</p>}

        <select name="region" value={form.region} onChange={handleChange}
          className="w-full p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-white">
          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω *</option>
          {regions.map((r) => <option key={r} value={r}>{r}</option>)}
        </select>
        {errors.region && <p className="text-red-500 text-sm">{errors.region}</p>}

        <select name="category" value={form.category} onChange={handleChange}
          className="w-full p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-white">
          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é *</option>
          {Object.keys(categories).map((c) => (
            <option key={c} value={c}>{c}</option>
          ))}
        </select>
        {errors.category && <p className="text-red-500 text-sm">{errors.category}</p>}

        <select name="subcategory" value={form.subcategory} onChange={handleChange}
          disabled={!form.category}
          className="w-full p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-white">
          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É *</option>
          {form.category && categories[form.category]?.map((s) => (
            <option key={s} value={s}>{s}</option>
          ))}
        </select>
        {errors.subcategory && <p className="text-red-500 text-sm">{errors.subcategory}</p>}

        {form.category && (
          <>
            <select name="service" value={form.service} onChange={handleChange}
              className="w-full p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-white">
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–µ—Ä–≤–∏—Å *</option>
              {getServiceOptions(form.category).map((s) => (
                <option key={s} value={s}>{s}</option>
              ))}
              <option value="other">–î—Ä—É–≥–æ–µ...</option>
            </select>
            {errors.service && <p className="text-red-500 text-sm">{errors.service}</p>}

            {form.service === "other" && (
              <input name="customService" value={form.customService || ""}
                onChange={(e) => setForm((prev) => ({ ...prev, customService: e.target.value }))}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞"
                className="w-full p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-white"
              />
            )}
          </>
        )}

        <textarea name="message" value={form.message} onChange={handleChange}
          placeholder="–¢–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è *"
          className="w-full p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-white"
          rows="4" maxLength={maxMessageLength} />
        {errors.message && <p className="text-red-500 text-sm">{errors.message}</p>}

        <input
          name="contact"
          value={form.contact}
          onChange={handleChange}
          placeholder="–ö–æ–Ω—Ç–∞–∫—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, +77011234567)"
          className="w-full p-2 border rounded bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-white"
          inputMode="tel"
          pattern="^\\+7\\d{10}$"
        />
        {errors.contact && <p className="text-red-500 text-sm">{errors.contact}</p>}


        <input type="file" accept="image/*" onChange={handleFileChange}
          className="w-full border p-2 rounded dark:bg-gray-800 dark:border-gray-700 dark:text-white" />
        {form.attachment && (
          <p className="text-sm text-green-600 dark:text-green-400">üìé –§–∞–π–ª –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω</p>
        )}

        <button type="submit"
          className="bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white w-full py-2 rounded transition">
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å
        </button>
      </form>
    </div>
  );
}
